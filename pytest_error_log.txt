PS C:\Users\Mentalane\talent-system> pytest
============================================================================================= test session starts ==============================================================================================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0      
django: version: 5.2, settings: talent_system.settings (from ini)
rootdir: C:\Users\Mentalane\talent-system
configfile: pytest.ini
plugins: django-4.11.1
collected 22 items

core\tests\test_models.py ..                                                                                                                                                                              [  9%]
core\tests\test_views.py ...F.FFFFF.F.......                                                                                                                                                              [ 95%]
core\tests.py .                                                                                                                                                                                           [100%]

=================================================================================================== FAILURES =================================================================================================== 
__________________________________________________________________________________________ APITests.test_create_event __________________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_create_event>

    def test_create_event(self):
        data = {
            'title': 'New Event',
            'description': 'New Description',
            'required_skills': 'Django',
            'date': timezone.make_aware(datetime(2025, 7, 1)).isoformat()
        }
        response = self.client.post('/api/events/', data, format='json')
>       self.assertEqual(response.status_code, 201)
E       AssertionError: 400 != 201

core\tests\test_views.py:141: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
WARNING  django.request:log.py:248 Bad Request: /api/events/
______________________________________________________________________________________ APITests.test_event_filter_by_date ______________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_event_filter_by_date>

    def test_event_filter_by_date(self):
        Event.objects.create(
            organizer=self.user,
            title='Another Event',
            description='Description',
            required_skills='Python',
            date=date(2025, 6, 2)
        )
>       response = self.client.get('/api/events/?date=2025-06-01')

core\tests\test_views.py:198:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
venv\Lib\site-packages\rest_framework\test.py:292: in get
    response = super().get(path, data=data, **extra)
venv\Lib\site-packages\rest_framework\test.py:209: in get
    return self.generic('GET', path, **r)
venv\Lib\site-packages\rest_framework\test.py:237: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:671: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:289: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:241: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:1087: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:802: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:55: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:515: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:486: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:46: in list
    return Response(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:797: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:251: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
venv\Lib\site-packages\rest_framework\serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

self = DateField(), value = datetime.datetime(2025, 6, 1, 0, 0, tzinfo=datetime.timezone.utc)

    def to_representation(self, value):
        if not value:
            return None

        output_format = getattr(self, 'format', api_settings.DATE_FORMAT)

        if output_format is None or isinstance(value, str):
            return value

        # Applying a `DateField` to a datetime value is almost always
        # not a sensible thing to do, as it means naively dropping
        # any explicit or implicit timezone info.
>       assert not isinstance(value, datetime.datetime), (
            'Expected a `date`, but got a `datetime`. Refusing to coerce, '
            'as this may mean losing timezone information. Use a custom '
            'read-only field and deal with timezone issues explicitly.'
        )
E       AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.        

venv\Lib\site-packages\rest_framework\fields.py:1272: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
ERROR    django.request:log.py:248 Internal Server Error: /api/events/
Traceback (most recent call last):
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\mixins.py", line 46, in list
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 797, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 716, in to_representation
    self.child.to_representation(item) for item in iterable
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\fields.py", line 1272, in to_representation
    assert not isinstance(value, datetime.datetime), (
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
_____________________________________________________________________________________ APITests.test_event_filter_by_skills _____________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_event_filter_by_skills>

    def test_event_filter_by_skills(self):
        Event.objects.create(
            organizer=self.user,
            title='Java Event',
            description='Description',
            required_skills='Java',
            date=date(2025, 6, 2)
        )
>       response = self.client.get('/api/events/?required_skills=Python')

core\tests\test_views.py:185:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
venv\Lib\site-packages\rest_framework\test.py:292: in get
    response = super().get(path, data=data, **extra)
venv\Lib\site-packages\rest_framework\test.py:209: in get
    return self.generic('GET', path, **r)
venv\Lib\site-packages\rest_framework\test.py:237: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:671: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:289: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:241: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:1087: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:802: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:55: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:515: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:486: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:46: in list
    return Response(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:797: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:251: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
venv\Lib\site-packages\rest_framework\serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

self = DateField(), value = datetime.datetime(2025, 6, 1, 0, 0, tzinfo=datetime.timezone.utc)

    def to_representation(self, value):
        if not value:
            return None

        output_format = getattr(self, 'format', api_settings.DATE_FORMAT)

        if output_format is None or isinstance(value, str):
            return value

        # Applying a `DateField` to a datetime value is almost always
        # not a sensible thing to do, as it means naively dropping
        # any explicit or implicit timezone info.
>       assert not isinstance(value, datetime.datetime), (
            'Expected a `date`, but got a `datetime`. Refusing to coerce, '
            'as this may mean losing timezone information. Use a custom '
            'read-only field and deal with timezone issues explicitly.'
        )
E       AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.        

venv\Lib\site-packages\rest_framework\fields.py:1272: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
ERROR    django.request:log.py:248 Internal Server Error: /api/events/
Traceback (most recent call last):
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\mixins.py", line 46, in list
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 797, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 716, in to_representation
    self.child.to_representation(item) for item in iterable
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\fields.py", line 1272, in to_representation
    assert not isinstance(value, datetime.datetime), (
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
________________________________________________________________________________________ APITests.test_event_pagination ________________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_event_pagination>

    def test_event_pagination(self):
    # Создаём 15 событий
        for i in range(15):
            Event.objects.create(
                organizer=self.user,
                title=f'Event {i}',
                description='Description',
                required_skills='Python',
                date=date(2025, 6, 1)
            )
>       response = self.client.get('/api/events/')

core\tests\test_views.py:168:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
venv\Lib\site-packages\rest_framework\test.py:292: in get
    response = super().get(path, data=data, **extra)
venv\Lib\site-packages\rest_framework\test.py:209: in get
    return self.generic('GET', path, **r)
venv\Lib\site-packages\rest_framework\test.py:237: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:671: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:289: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:241: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:1087: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:802: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:55: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:515: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:486: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:46: in list
    return Response(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:797: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:251: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
venv\Lib\site-packages\rest_framework\serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

self = DateField(), value = datetime.datetime(2025, 6, 1, 0, 0, tzinfo=datetime.timezone.utc)

    def to_representation(self, value):
        if not value:
            return None

        output_format = getattr(self, 'format', api_settings.DATE_FORMAT)

        if output_format is None or isinstance(value, str):
            return value

        # Applying a `DateField` to a datetime value is almost always
        # not a sensible thing to do, as it means naively dropping
        # any explicit or implicit timezone info.
>       assert not isinstance(value, datetime.datetime), (
            'Expected a `date`, but got a `datetime`. Refusing to coerce, '
            'as this may mean losing timezone information. Use a custom '
            'read-only field and deal with timezone issues explicitly.'
        )
E       AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.        

venv\Lib\site-packages\rest_framework\fields.py:1272: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
ERROR    django.request:log.py:248 Internal Server Error: /api/events/
Traceback (most recent call last):
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\mixins.py", line 46, in list
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 797, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 716, in to_representation
    self.child.to_representation(item) for item in iterable
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\fields.py", line 1272, in to_representation
    assert not isinstance(value, datetime.datetime), (
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
___________________________________________________________________________________________ APITests.test_get_events ___________________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_get_events>

    def test_get_events(self):
>       response = self.client.get('/api/events/')

core\tests\test_views.py:127:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
venv\Lib\site-packages\rest_framework\test.py:292: in get
    response = super().get(path, data=data, **extra)
venv\Lib\site-packages\rest_framework\test.py:209: in get
    return self.generic('GET', path, **r)
venv\Lib\site-packages\rest_framework\test.py:237: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:671: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:289: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:241: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:1087: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:802: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:55: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:515: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:486: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:46: in list
    return Response(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:797: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:251: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
venv\Lib\site-packages\rest_framework\serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

self = DateField(), value = datetime.datetime(2025, 6, 1, 0, 0, tzinfo=datetime.timezone.utc)

    def to_representation(self, value):
        if not value:
            return None

        output_format = getattr(self, 'format', api_settings.DATE_FORMAT)

        if output_format is None or isinstance(value, str):
            return value

        # Applying a `DateField` to a datetime value is almost always
        # not a sensible thing to do, as it means naively dropping
        # any explicit or implicit timezone info.
>       assert not isinstance(value, datetime.datetime), (
            'Expected a `date`, but got a `datetime`. Refusing to coerce, '
            'as this may mean losing timezone information. Use a custom '
            'read-only field and deal with timezone issues explicitly.'
        )
E       AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.        

venv\Lib\site-packages\rest_framework\fields.py:1272: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
ERROR    django.request:log.py:248 Internal Server Error: /api/events/
Traceback (most recent call last):
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\mixins.py", line 46, in list
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 797, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 716, in to_representation
    self.child.to_representation(item) for item in iterable
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\fields.py", line 1272, in to_representation
    assert not isinstance(value, datetime.datetime), (
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
__________________________________________________________________________________________ APITests.test_get_profile ___________________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_get_profile>

    def test_get_profile(self):
        response = self.client.get('/api/profiles/')
        self.assertEqual(response.status_code, 200)
>       self.assertEqual(response.data[0]['user']['id'], self.user.id)
E       KeyError: 0

core\tests\test_views.py:62: KeyError
______________________________________________________________________________________ APITests.test_get_recommendations _______________________________________________________________________________________ 

self = <test_views.APITests testMethod=test_get_recommendations>

    def test_get_recommendations(self):
>       response = self.client.get('/api/recommendations/')

core\tests\test_views.py:82:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
venv\Lib\site-packages\rest_framework\test.py:292: in get
    response = super().get(path, data=data, **extra)
venv\Lib\site-packages\rest_framework\test.py:209: in get
    return self.generic('GET', path, **r)
venv\Lib\site-packages\rest_framework\test.py:237: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:671: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:289: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:241: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:1087: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:802: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:55: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
venv\Lib\site-packages\django\views\generic\base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:515: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:486: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\decorators.py:50: in handler
    return func(*args, **kwargs)
core\views.py:32: in get_recommendations
    return Response(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:797: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:251: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
venv\Lib\site-packages\rest_framework\serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

self = DateField(), value = datetime.datetime(2025, 6, 1, 0, 0, tzinfo=datetime.timezone.utc)

    def to_representation(self, value):
        if not value:
            return None

        output_format = getattr(self, 'format', api_settings.DATE_FORMAT)

        if output_format is None or isinstance(value, str):
            return value

        # Applying a `DateField` to a datetime value is almost always
        # not a sensible thing to do, as it means naively dropping
        # any explicit or implicit timezone info.
>       assert not isinstance(value, datetime.datetime), (
            'Expected a `date`, but got a `datetime`. Refusing to coerce, '
            'as this may mean losing timezone information. Use a custom '
            'read-only field and deal with timezone issues explicitly.'
        )
E       AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.        

venv\Lib\site-packages\rest_framework\fields.py:1272: AssertionError
---------------------------------------------------------------------------------------------- Captured log call ----------------------------------------------------------------------------------------------- 
ERROR    django.request:log.py:248 Internal Server Error: /api/recommendations/
Traceback (most recent call last):
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "C:\Users\Mentalane\talent-system\core\views.py", line 32, in get_recommendations
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 797, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 716, in to_representation
    self.child.to_representation(item) for item in iterable
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\fields.py", line 1272, in to_representation
    assert not isinstance(value, datetime.datetime), (
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
=============================================================================================== warnings summary =============================================================================================== 
core/tests/test_views.py::APITests::test_get_profile
  C:\Users\Mentalane\talent-system\venv\Lib\site-packages\rest_framework\pagination.py:207: UnorderedObjectListWarning: Pagination may yield inconsistent results with an unordered object_list: <class 'core.models.TalentProfile'> QuerySet.
    paginator = self.django_paginator_class(queryset, page_size)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================================================================================== short test summary info ============================================================================================ 
FAILED core/tests/test_views.py::APITests::test_create_event - AssertionError: 400 != 201
FAILED core/tests/test_views.py::APITests::test_event_filter_by_date - AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
FAILED core/tests/test_views.py::APITests::test_event_filter_by_skills - AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom 
read-only field and deal with timezone issues explicitly.
FAILED core/tests/test_views.py::APITests::test_event_pagination - AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
FAILED core/tests/test_views.py::APITests::test_get_events - AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
FAILED core/tests/test_views.py::APITests::test_get_profile - KeyError: 0
FAILED core/tests/test_views.py::APITests::test_get_recommendations - AssertionError: Expected a `date`, but got a `datetime`. Refusing to coerce, as this may mean losing timezone information. Use a custom read-only field and deal with timezone issues explicitly.
=================================================================================== 7 failed, 15 passed, 1 warning in 19.24s =================================================================================== 